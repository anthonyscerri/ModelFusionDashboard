// models/tasks.go
package models

import (
	"database/sql"
	_ "github.com/mattn/go-sqlite3"
	"log"
)



type Features struct {
        Id      int `json:"id"`
        Name      string `json:"name"`
        Type      string `json:"type"`
        Lat       string `json:"lat"`
        Lon       string `json:"lon"`
}


type Layers struct {
        Id      int `json:"id"`
        Name      string `json:"name"`
        Active      string `json:"active"`
        Feature      []Features `json:"features"`
}

type Data struct {
	Map	string `json:"map"`
	TileLayer	string  `json:"tileLayer"`
	Layers	[]Layers	`json:"layers"`
}

func GetAnomaly() Data {
    db,err := sql.Open("sqlite3", "./models/reporting.db")

    record, err := db.Query("SELECT id,lat,long FROM anomalies")
    if err != nil {
        log.Fatal(err)
    }
    defer record.Close()

    DataRecord := Data{}
    result := Layers{}
    for record.Next() {

	f := Features{}
	//f.Id = 1
	f.Name = "test"
	f.Type = "marker"
	record.Scan(&f.Id,&f.Lat, &f.Lon)

	result.Id =1
	result.Name ="Restaurants"
	result.Active ="false"
	result.Feature = append(result.Feature,f)
    }

 
   DataRecord.Layers = append(DataRecord.Layers,result) 
   return DataRecord

}
